image: mcr.microsoft.com/dotnet/sdk:8.0-jammy

stages:
  - test
  - release
  - production
  
test:
  stage: test
  services:
    - postgres:12.2-alpine

  variables:
    DB_HOST: postgres
    POSTGRES_DB: blastcms_database
    POSTGRES_USER: blastcms_user
    POSTGRES_PASSWORD: not_magical_scary
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - cd src
    - dotnet test

release:
  before_script:

  stage: release
  image : docker:20.10.12-dind
  services:
    - docker:dind
  before_script:
    - docker info
    # Install CA certs, openssl to https downloads, python for gcloud sdk
    - apk add --update make ca-certificates openssl python3 libc6-compat
    - update-ca-certificates
    # Write our GCP service account private key into a file
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    # Download and install Google Cloud SDK
    - wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-374.0.0-linux-x86_64.tar.gz
    - tar -zxvf google-cloud-sdk-374.0.0-linux-x86_64.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://us.gcr.io < ${HOME}/gcloud-service-key.json
  script:
    - cd src
    - export BUILD_LABEL=j-$CI_JOB_ID
    - docker build -t $IMAGE_NAME:$CI_PIPELINE_ID .
    - docker tag $IMAGE_NAME:$CI_PIPELINE_ID "us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_PIPELINE_ID"
    - docker push "us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_PIPELINE_ID"
    - cd ..
    - google-cloud-sdk/bin/gcloud run deploy blast-cms-test --project $GCLOUD_PROJECT_ID --image "us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_PIPELINE_ID" --platform managed --region us-east1

production:
  stage: production
  image : docker:20.10.12-dind
  services:
    - docker:dind
  before_script:
    - docker info
    # Install CA certs, openssl to https downloads, python for gcloud sdk
    - apk add --update make ca-certificates openssl python3 libc6-compat
    - update-ca-certificates
    # Write our GCP service account private key into a file
    - echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    # Download and install Google Cloud SDK
    - wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-374.0.0-linux-x86_64.tar.gz
    - tar -zxvf google-cloud-sdk-374.0.0-linux-x86_64.tar.gz && ./google-cloud-sdk/install.sh --usage-reporting=false --path-update=true
    - google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://us.gcr.io < ${HOME}/gcloud-service-key.json
  only:
    - main
  when: manual
  script:
    - google-cloud-sdk/bin/gcloud run deploy blast-cms --project $GCLOUD_PROJECT_ID --image "us.gcr.io/$GCLOUD_PROJECT_ID/$IMAGE_NAME:$CI_PIPELINE_ID" --platform managed --region us-east1

